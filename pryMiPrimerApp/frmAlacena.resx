<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>